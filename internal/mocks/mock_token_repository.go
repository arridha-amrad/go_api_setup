// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repositories/token_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "my-go-api/internal/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockITokenRepository is a mock of ITokenRepository interface.
type MockITokenRepository struct {
	ctrl     *gomock.Controller
	recorder *MockITokenRepositoryMockRecorder
}

// MockITokenRepositoryMockRecorder is the mock recorder for MockITokenRepository.
type MockITokenRepositoryMockRecorder struct {
	mock *MockITokenRepository
}

// NewMockITokenRepository creates a new mock instance.
func NewMockITokenRepository(ctrl *gomock.Controller) *MockITokenRepository {
	mock := &MockITokenRepository{ctrl: ctrl}
	mock.recorder = &MockITokenRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITokenRepository) EXPECT() *MockITokenRepositoryMockRecorder {
	return m.recorder
}

// GetToken mocks base method.
func (m *MockITokenRepository) GetToken(ctx context.Context, userId, deviceId uuid.UUID) (*models.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetToken", ctx, userId, deviceId)
	ret0, _ := ret[0].(*models.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetToken indicates an expected call of GetToken.
func (mr *MockITokenRepositoryMockRecorder) GetToken(ctx, userId, deviceId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToken", reflect.TypeOf((*MockITokenRepository)(nil).GetToken), ctx, userId, deviceId)
}

// Insert mocks base method.
func (m *MockITokenRepository) Insert(ctx context.Context, userId, deviceId uuid.UUID, hash string) (*models.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", ctx, userId, deviceId, hash)
	ret0, _ := ret[0].(*models.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Insert indicates an expected call of Insert.
func (mr *MockITokenRepositoryMockRecorder) Insert(ctx, userId, deviceId, hash interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockITokenRepository)(nil).Insert), ctx, userId, deviceId, hash)
}

// Remove mocks base method.
func (m *MockITokenRepository) Remove(ctx context.Context, userId, deviceId uuid.UUID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Remove", ctx, userId, deviceId)
	ret0, _ := ret[0].(error)
	return ret0
}

// Remove indicates an expected call of Remove.
func (mr *MockITokenRepositoryMockRecorder) Remove(ctx, userId, deviceId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Remove", reflect.TypeOf((*MockITokenRepository)(nil).Remove), ctx, userId, deviceId)
}
